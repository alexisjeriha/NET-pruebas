<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>