<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>